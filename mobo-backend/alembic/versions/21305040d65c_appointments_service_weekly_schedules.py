"""appointments: service + weekly schedules

Revision ID: 21305040d65c
Revises: 7fca1beba3b7
Create Date: 2025-09-10 00:11:58.759821

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '21305040d65c'
down_revision: Union[str, Sequence[str], None] = '7fca1beba3b7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('service_schedules', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_service_schedules_service_schedules_service_id'))

    op.drop_table('service_schedules')
    with op.batch_alter_table('appointment_services', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('department_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_index(batch_op.f('ix_appointment_services_appointment_services_department_id'))
        batch_op.create_unique_constraint(batch_op.f('uq_appointment_services_name'), ['name'])

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('appointment_services', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_appointment_services_name'), type_='unique')
        batch_op.create_index(batch_op.f('ix_appointment_services_appointment_services_department_id'), ['department_id'], unique=False)
        batch_op.alter_column('department_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    op.create_table('service_schedules',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('service_id', sa.INTEGER(), nullable=False),
    sa.Column('weekday', sa.INTEGER(), nullable=False),
    sa.Column('start_time', sa.TIME(), nullable=False),
    sa.Column('end_time', sa.TIME(), nullable=False),
    sa.Column('slot_length_min', sa.INTEGER(), nullable=False),
    sa.Column('capacity_per_slot', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['service_id'], ['appointment_services.id'], name=op.f('fk_service_schedules_service_id_appointment_services')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_service_schedules'))
    )
    with op.batch_alter_table('service_schedules', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_service_schedules_service_schedules_service_id'), ['service_id'], unique=False)

    # ### end Alembic commands ###
